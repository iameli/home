{
	"f": {
		"prefix": "f",
		"body": "function(${1}) {${2}}",
		"description": "",
		"scope": "source.js"
	},
	"fat": {
		"prefix": "fat",
		"body": "(${1}) => {${2}}",
		"description": "",
		"scope": ""
	},
	"for": {
		"prefix": "for",
		"body": "\nfor (let i = 0; i < ${1:things.length}; i+=${2:1}) {\n   ${2:}.\n}\n",
		"description": "",
		"scope": ""
	},
	"jsclass": {
		"prefix": "jsclass",
		"body": "\n(function(){\n  // requires\n\n  // constructor\n  var ${1:name} = module.exports = function(){\n    \n  };\n})();\n",
		"description": "",
		"scope": ""
	},
	"js": {
		"prefix": "js",
		"body": "\nJSON.stringify ${1:thing}, null, 4\n",
		"description": "",
		"scope": ""
	},
	"prom": {
		"prefix": "prom",
		"body": "new Promise((resolve, reject) => {\n  ${1}\n});",
		"description": "",
		"scope": ""
	},
	"react-start": {
		"prefix": "react-start",
		"body": "\n\nimport React, { Component } from \"react\";\nimport {watch, bindComponent} from \"./sp-binding\";\n\nexport class ${1:MyThingy} extends Component {\n  static propTypes = {\n    \"${2:userId}\": React.PropTypes.string.isRequired,\n  };\n\n  static subscribe(props) {\n    return {\n      ${3:user}: watch.one(\"${3:user}s\", {id: ${2:userId}})\n    }\n  }\n\n  render () {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default bindComponent(${1:MyThingy});\n",
		"description": "",
		"scope": ""
	},
	"cr": {
		"prefix": "cr",
		"body": "${1:thing} = require '${1:thing}'",
		"description": "",
		"scope": ""
	},
	"sty": {
		"prefix": "sty",
		"body": "\nconst ${1:MyThingy} = styled.${2:div}`\n  ${3:}\n`;\n",
		"description": "",
		"scope": ""
	},
	"t": {
		"prefix": "t",
		"body": "\n${${1:}}${2:}\n",
		"description": "",
		"scope": ""
	}
}